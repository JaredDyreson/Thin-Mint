#!/usr/bin/env bash

# secondary component to the base installer  (2/4)
# task: run setup inside of the arch-chroot environment
# AUTHOR: Jared Dyreson

# This is inside the chroot environment

[[ ! -d "$LOG_DIR" ]] && mkdir "$LOG_DIR"

exec 1> >(tee "$LOG_DIR/bootloader_stdout.log")
exec 2> >(tee "$LOG_DIR/bootloader_stderr.log")

function timezone() {
    # Set the timezone for Los Angeles

    ln -sf /usr/share/zoneinfo/America/Los_Angeles /etc/localtime
}

function set_hardware_time() {
    # Sync the time to UTC

    hwclock --systohc --utc
}

function enable_english_locals() {
    # We want English as the primary language

    echo "LANG=en_US.UTF-8" > /etc/locale.conf
    echo "en_US.UTF-8 UTF-8" > /etc/locale.gen

    locale-gen
}

function internet() {
    # Internet persistence

    # make sure this name is reflected in our network configuration
    # what is our machine's name to the world

    [[ -z "${HOSTNAME+x}" ]] && HOSTNAME=""$USER_PLAIN"-computer"

    sed "s/\[HOSTNAME\]/$HOSTNAME/" assets/host > /etc/hosts

    echo "$HOSTNAME" > /etc/hostname
    systemctl enable NetworkManager
}

function bootloader() {
    # Installing the bootloader

    declare -a bootloader_components=(
        "efibootmgr"
        "grub-efi-x86_64"
        "os-prober"
    )

    # update the cache and upgrade all components thus far
    pacman -Syu

    for component in "${bootloader_components[@]}"; do
        pacman -S --needed --noconfirm "$component"
    done

    # EFI bootloader

    grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=grub
    grub-mkconfig -o /boot/grub/grub.cfg

    # mkdir -v /boot/EFI/BOOT
    # cp -arv /boot/EFI/grub/grubx64.efi /boot/EFI/BOOT/BOOTX86.EFI
}

function compile_kernel() {

    # Compile the kernel

    mkinitcpio -p linux
}

function system_configuration_main() {
    CWD="$PWD"
    cd components/base_install

    enable_english_locals
    set_hardware_time
    internet
    bootloader
    compile_kernel
    cd "$CWD"
}
bootloader
