#!/usr/bin/env bash

# Configure user profile

#exec 1> >(tee "user_conf_stdout.log")
#exec 2> >(tee "user_conf_stderr.log")

# constant name and can be changed
# MINT_PASS : password specified by password_manager

MINT_USER="jared"
MINT_HOME="home/$MINT_USER"

## Exceptions ##

function perm_err_(){
  echo "[-] Run as root, stop."
  exit 1
}

function no_user_specified_(){
  echo "[-] No user specified, stop"
  exit 1
}

function user_exists_(){
  echo "[-] $MINT_USER is already a user, stop"
}

function wrong_os_err_(){
  echo "[-] Only supports Arch Linux, stop"
  exit 1
}

## Functions ##

function make_root(){
  [[ -z "$@" ]] && no_user_specified_
	echo "$1 ALL=(ALL) ALL"  | tee -a /etc/sudoers
}

function password_manager(){
	passone=""
	passtwo="empty_password_please_fill"
	while [[ -z "$passone" || "$passone" != "$passtwo" ]]; do
		passone=$(dialog --stdout --passwordbox "Enter admin password" 0 0) || exit 1
		clear
		passtwo=$(dialog --stdout --passwordbox "Enter admin password again" 0 0) || exit 1
		clear
	done
  #echo "$MINT_USER:$passone" | chpasswd "$MINT_USER"
  #echo "root:$passone" | chpasswd root
  export MINT_PASS="$passone"
}

function create_user(){
  [[ -z "${MINT_USER+x}" ]] && no_user_specified_
  [[ "$(grep "^$MINT_USER" /etc/passwd)" ]] && return
  useradd -m -g users -G wheel,storage,power -s /bin/zsh "$MINT_USER"
  password_manager

  printf "%s\n" "$MINT_PASS" | sudo --stdin -u "$MINT_USER" bash << EOF
    mkdir -p $MINT_HOME/{Applications,Downloads,Documents,Music,Pictures/Wallpapers,Projects,Videos}
    git clone https://github.com/JaredDyreson/dotfiles $MINT_HOME/Projects/dotfiles
    git clone https://github.com/JaredDyreson/university $MINT_HOME/Projects/university
    echo "$MINT_PASS"
EOF
}

function initial_configuration(){
  #[[ -f /var/lib/pacman/db.lck ]] && rm /var/lib/pacman/db.lck  
  #pacman -Sy --noconfirm sudo git dialog python zsh
  if [[ ! $(grep "^builduser" /etc/passwd) ]]; then
    useradd -s /bin/bash builduser -m
    passwd -d builduser
    make_root builduser
  fi
  create_user
  make_root "$MINT_USER"

  sudo -u "builduser" bash << EOF
    git clone https://aur.archlinux.org/yay.git /home/builduser/yay
    cd /home/builduser/yay
    makepkg -si --noconfirm
    cd ..
    rm -rf yay
EOF
  # configure makepkg.conf
}
